graph = {
    'markov model': [('dictionary', 1)],
    'markov network': [('dictionary', 1)],
    'markov random field': [('markov process models', 1)],
    'matplotlib': [('frameworks', 1), ('numpy', 0.9375), ('scipy', 0.9375), ('python', 0.9375), ('pandas', 0.9375), ('tensorflow', 0.9375)],
    'matthias feurer': [('people', 1)],
    'max match': [('algorithms', 1)],
    'semi-supervised learning': [('mltypes', 1)],
    'mean-shift': [('clustering', 1)],
    'michael laskin': [('people', 1)],
    'minibatchkmeans': [('cluster applications', 1)],
    'minibatchmeans': [('clustering', 1)],
    'multilabel classification': [('applications', 1)],
    'multinomial naive bayes': [('naive bayes', 0.9375), ('support vector machines', 0.9375)],
    'muti-task learning': [('algorithms', 1)],
    'mxnet': [('frameworks', 1), ('tensorflow', 0.9375)],
    'nisq': [('dictionary', 1)],
    'noisy intermediate-scale quantum processors': [('hardware', 1)],
    'nlg': [('dictionary', 1)],
    'natural language generation': [('natural language processing', 1), ('nlg', 0.9375)],
    'nlp': [('dictionary', 1)],
    'nlu': [('dictionary', 1)],
    'natural language understanding': [('natural language processing', 1), ('nlu', 0.9375)],
    'nubia': [('dictionary', 1)],
    'natural language understand': [('natural language processing', 1)],
    'nelle varoquaux': [('people', 1)],
    'network-x': [('frameworks', 1)],
    'newton-cg': [('optimization', 1)],
    'nick bostrom': [('people', 1)],
    'nicolas hug': [('people', 1)],
    'noam chomsky': [('people', 1)],
    'noise foiltering': [('applications', 1)],
    'non-linear technique': [('applications', 1)],
    'numpy': [('frameworks', 1), ('scipy', 0.9375), ('pandas', 0.9375), ('scikit-learn', 0.9375)],
    'python': [('frameworks', 1)],
    'oas': [('covariance estimation', 1), ('pomdp', 0.9375)],
    'oas estimator': [('applications', 1)],
    'ode': [('dictionary', 1)],
    'ordinary differential equations': [('applications', 1), ('radial basis function network', 0.9375)],
    'olsr': [('dictionary', 1)],
    'ordinary least squares': [('linear models', 1)],
    'optics': [('dictionary', 1), ('ordering points to identify the clustering structure', 0.9375)],
    'ordering points to identify the clustering structure': [('clustering', 1)],
    'olivier grisel': [('people', 1)],
    'orthogonal polynomials': [('functions', 1)],
    'others': [('frameworks', 1)],
    'outlier detection': [('applications', 1)],
    'p. j. rousseeuw': [('people', 1)],
    'pca': [('dictionary', 1), ('principal component analysis', 0.9375), ('probabilistic pca', 0.9375)],
    'pcr': [('dictionary', 1), ('principal component regression', 0.9375), ('plsr', 0.9375)],
    'principal component regression': [('dimensionality reduction', 1)],
    'plsr': [('dictionary', 1), ('support vector machines', 0.9375)],
    'partial least squares regression': [('dimensionality reduction', 1), ('plsr', 0.9375), ('support vector machines', 0.9375)],
    'pomdp': [('dictionary', 1)],
    'partially observable markov decision process': [('markov process models', 1), ('pomdp', 0.9375)],
    'paddle paddle': [('frameworks', 1)],
    'pandas': [('frameworks', 1), ('scipy', 0.9375), ('python', 0.9375), ('tensorflow', 0.9375)],
    'parallel programming': [('applications', 1), ('support vector machines', 0.9375)],
    'partial dependence plots': [('applications', 1)],
    'perceptron': [('linear models', 1)],
    'personal assistant': [('applications', 1)],
    'pieter abbeel': [('people', 1)],
    'probabilistic pca': [('probabilistic models', 1)],
    'project pursuit': [('dimensionality reduction', 1)],
    'pycaret': [('frameworks', 1)],
    'xgboost': [('frameworks', 1)],
    'spacy': [('frameworks', 1)],
    'pytorch': [('frameworks', 1)],
    'qda': [('dictionary', 1), ('quadratic discriminant analysis', 0.9375)],
    'quadratic discriminant analysis': [('dimensionality reduction', 1), ('support vector machine', 0.9375)],
    'rnn': [('dictionary', 1)],
    'radial basis function network': [('artificial neural network', 1)],
    'random forest': [('ensemble', 1)],
    'reza zadeh': [('people', 1)],
    'ricardo j. g. b. campello': [('people', 1)],
    'richard socher': [('people', 1)],
    'ridge regression': [('regression', 1)],
    'robust': [('covariance estimation', 1)],
    'roman yurchak': [('people', 1)],
    'ronald van loon': [('people', 1)],
    'sofm': [('dictionary', 1)],
    'self-organizing feature map': [('artificial neural network', 1)],
    'som': [('dictionary', 1)],
    'self-organizing map': [('artificial neural network', 1), ('instance-based', 1)],
    'son': [('dictionary', 1)],
    'svm': [('dictionary', 1)],
    'support vector machines': [('instance-based', 1)],
    'sammon mapping': [('dimensionality reduction', 1)],
    'the scipy community': [('institutions', 1)],
    'shrinkage': [('covariance estimation', 1)],
    'signal processing': [('applications', 1)],
    'simplex': [('optimization', 1)],
    'software': [('dependencies', 1)],
    'sparce matrices': [('applications', 1)],
    'sparse inverse': [('covariance estimation', 1)],
    'spectral bi-clustering': [('clustering', 1)],
    'spectral co-clustering': [('clustering', 1)],
    'speech': [('applications', 1)],
    'stacked auto-encoders': [('deep neural networks', 1)],
    'stacked generalization': [('ensemble', 1)],
    'stacking': [('dictionary', 1)],
    'stanislaw ulam': [('people', 1)],
    'stepwise regression': [('regression', 1)],
    'stochastic gradient descent': [('artificial neural network', 1)],
    'stock market prediction': [('applications', 1)],
    'structured': [('data base', 1)],
    'structured ward hierarchical clustering on an image of coins': [('cluster applications', 1)],
    'support vector machine': [('algorithms', 1), ('svm', 0.9375)],
    'sympy': [('frameworks', 1)],
    't-ngl': [('frameworks', 1)],
    'td': [('dictionary', 1)],
    'tmm': [('dictionary', 1)],
    'tolerant markov model': [('markov process models', 1)],
    'tensorflow': [('frameworks', 1)],
    'text classification': [('applications', 1)],
    'text summarization': [('applications', 1)],
    'theano': [('frameworks', 1)],
    'thomas j. fan': [('people', 1)],
    'tom dupr√© la tour': [('people', 1)],
    'toy datasets': [('cluster applications', 1)],
    'unstructured': [('data base', 1)],
    'visualization': [('applications', 1)],
    'vlad niculae': [('people', 1)],
    'vladmir vapinik': [('people', 1)],
    'voting classifier': [('ensemble', 1)],
    'voting regressor': [('ensemble', 1)],
    'widrow-hoff': [('algorithms', 1)],
    'windows': [('operating system', 1)],
    'word2vec': [('deep learning', 1)],
    'yann lecun': [('people', 1)],
    'yaroslav halchenko': [('people', 1)],
    'zsolt zombori': [('people', 1)],
    'k-means': [('clustering', 1)],
    'k-medians': [('clustering', 1)],
    'k-nearest neighbor': [('instance-based', 1)],
    'k-dimensional trees': [('applications', 1)],
    'knn': [('dictionary', 1)],
    't-sne': [('dictionary', 1)],
    '2d plotting capabilities': [('applications', 1)],
    '3-classe classification': [('probability calibration', 1)],
    'hierarchical clustering: structured vs unstructured ward': [('cluster applications', 1)],
    'rusian leont\'evich stratonovich': [('people', 1)],
    'describeddate': [('datetime', 1)],
    'canbesolvedby': [],
    'cansolve': [],
    'isresourcefor': [],
    'worksfor': [],
    'isauthor': [],
    'hasauthor': [],
    'hasacronym': [],
    'hasbyname': [],
    'isacronym': [],
    'hasalgorithm': [],
    'isalgorithmof': [],
    'hasapplicationfrom': [],
    'isapplicationof': [],
    'wasdescribed': [],
    'isbyname': [],
    'hascomplementaryresources': [],
    'iscomplementaryresources': [],
    'hascontinuosvalues': [],
    'iscontinuousvariable': [],
    'hasdiscretvalues': [],
    'iscategoricalvariable': [],
    'hasfunction': [],
    'hasmodule': [],
    'hasmethod': [],
    'ismethod': [],
    'ismodule': [],
    'haspart': [],
    'ispart': [],
    'hassimilarmethodsfrom': [],
    'hassimilarmethodsin': [],
    'issimilarmethodsfrom': [],
    'hassource': [],
    'implementedby': [],
    'isalgoritm': [],
    'istechnique': [],
    'iscoauthor': [],
    'iscopyright': [],
    'isdeprecated': [],
    'isdesignedtoworkfor': [],
    'isfunction': [],
    'ismemberof': [],
    'istypeof': [],
    'isopensourcefrom': [],
    'ispackagefrom': [],
    'isperson': [],
    'isproblemof': [],
    'issubpackagefrom': [],
    'issubtypeof': [],
    'issucessor': [],
    'seealso': [],
    'usesolver': [],
    'mlo:github': [],
    'mlo:linkedln': [],
    'mlo:twitter': [],
    'mlo:website': [],
    'thing': []
} 