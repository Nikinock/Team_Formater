graph = {
    'scikit-learn': [('frameworks', 1), ('scipy', 0.9375)],
    'l1-penalized': [('covariance estimation', 1)],
    'datetime': [],
    'described': [],
    'is': [],
    'requires': [],
    'mlo:contributor': [],
    'mlo:license': [],
    'dictionary': [('isbyname', 1), ('thing', 1)],
    'frameworks': [('ispackagefrom', 1), ('issubpackagefrom', 1), ('thing', 1)],
    'ann': [('dictionary', 1), ('artificial neural network', 0.9375)],
    'artificial neural network': [('algorithms', 1)],
    'atp': [('dictionary', 1), ('lars', 0.9375)],
    'automated theorem proving': [('applications', 1)],
    'aaron klein': [('people', 1)],
    'people': [('involved', 1)],
    'auto-sklearn': [('frameworks', 1)],
    'adaboost': [('ensemble', 1), ('voting classifier', 0.9375), ('naive bayes', 0.9375), ('gaussian naive bayes', 0.9375)],
    'ensemble': [('algorithms', 1)],
    'adam coates': [('people', 1)],
    'adrin jalal': [('people', 1)],
    'agglomerative clustering on a 2d embedding of digits': [('cluster applications', 1)],
    'cluster applications': [('applications', 1)],
    'agglomerative clustering with and without structure': [('cluster applications', 1)],
    'agglomerative clustering with different metrics': [('cluster applications', 1)],
    'alan k. ho': [('people', 1)],
    'quantum machine learning': [('algorithms', 1)],
    'tensorflow quantum': [('frameworks', 1)],
    'andrea skolik': [('people', 1)],
    'antonio j. martinez': [('people', 1)],
    'dave bacon': [('people', 1)],
    'david von dollen': [('people', 1)],
    'evan peters': [('people', 1)],
    'guillaume verdon': [('people', 1)],
    'hartmut neven': [('people', 1)],
    'jae hyeon yoo': [('people', 1)],
    'jarrod r. mcclean': [('people', 1)],
    'martin leib': [('people', 1)],
    'masoud mohseni': [('people', 1)],
    'michael broughton': [('people', 1)],
    'michael streif': [('people', 1)],
    'murphy yuezhen niu': [('people', 1)],
    'philip massey': [('people', 1)],
    'ramin halavati': [('people', 1)],
    'sergei v. isakov': [('people', 1)],
    'sergio boixo': [('people', 1)],
    'trevor mccourt': [('people', 1)],
    'alexandre gramfort': [('people', 1)],
    'algebraic equations': [('applications', 1)],
    'applications': [('thing', 1)],
    'scipy': [('frameworks', 1)],
    'algorithms': [('thing', 1)],
    'dependencies': [('thing', 1)],
    'involved': [('thing', 1)],
    'mltypes': [('thing', 1)],
    'ali abdalla': [('people', 1)],
    'mohamed coulibali': [('people', 1)],
    'muhammed yusuf kocyigit': [('people', 1)],
    'pelkins ajanoh': [('people', 1)],
    'neural based interchangeability assessor for text generation': [('frameworks', 1)],
    'allie k. miller': [('people', 1)],
    'andreas mueller': [('people', 1)],
    'andrej karpathy': [('people', 1)],
    'andrew ng': [('people', 1)],
    'andrey andreyevich markov': [('people', 1)],
    'markov process models': [('algorithms', 1)],
    'android': [('operating system', 1)],
    'operating system': [('dependencies', 1)],
    'angelica lim': [('people', 1)],
    'approximate nearest neighbors in tsne': [('applications', 1)],
    'apriori': [('association rule learning', 1), ('birch', 0.9375)],
    'association rule learning': [('algorithms', 1)],
    'aravind srinivas': [('people', 1)],
    'contrastive unsupervised representations for reinforcement learning': [('image-based', 1)],
    'arthur lee samuel': [('people', 1)],
    'audio processing': [('applications', 1)],
    'convolutional neural networks': [('deep neural networks', 1), ('recurrent neural networks', 0.9375)],
    'recurrent neural networks': [('deep neural networks', 1)],
    'the transformers': [('applications', 1)],
    'auto-weka': [('frameworks', 1)],
    'automl': [('mltypes', 1)],
    'prolog': [('frameworks', 1)],
    'autonomous driving': [('applications', 1)],
    'averaged one-dependencies estimators': [('bayes', 1)],
    'bayes': [('algorithms', 1), ('naive bayes', 0.9375), ('gaussian naive bayes', 0.9375), ('multinomial naive bayes', 0.9375)],
    'ayry functions': [('functions', 1)],
    'functions': [('applications', 1)],
    'bert': [('dictionary', 1), ('bidirectional encoder representations from transformers', 0.9375)],
    'bidirectional encoder representations from transformers': [('natural language processing', 1), ('natural language generation', 0.9375)],
    'bfgs': [('optimization', 1)],
    'optimization': [('applications', 1)],
    'birch': [('dictionary', 1), ('dbscan', 0.9375), ('optics', 0.9375)],
    'balanced iterative reducing and clustering using hierarchies': [('cluster applications', 1)],
    'backpropagation': [('artificial neural network', 1)],
    'multilayer perceptron': [('applications', 1), ('perceptron', 0.9375)],
    'supervised learning': [('mltypes', 1)],
    'bagging': [('dictionary', 1)],
    'bootstrapped agregation': [('ensemble', 1)],
    'bagging meta-estimator': [('ensemble', 1)],
    'bayesian belief network': [('bayes', 1)],
    'bayesian network': [('bayes', 1), ('dbn', 0.9375)],
    'ben goertzel': [('people', 1)],
    'bernard widrow': [('people', 1)],
    'marcian edward hoff': [('people', 1)],
    'least mean squares': [('algorithms', 1)],
    'bernouilli naive bayes': [('naive bayes', 1)],
    'naive bayes': [('bayes', 1), ('support vector machines', 0.9375), ('svm', 0.9375), ('support vector machine', 0.9375), ('qda', 0.9375), ('parallel programming', 0.9375)],
    'bertrand thirion': [('people', 1)],
    'natural language processing': [('algorithms', 1), ('nlp', 0.9375)],
    'blending': [('dictionary', 1)],
    'weighted average': [('ensemble', 1)],
    'boosting': [('ensemble', 1), ('gradient boosting machine', 0.9375)],
    'brain scans': [('applications', 1)],
    'c4.5': [('decision tree', 1)],
    'decision tree': [('algorithms', 1), ('naive bayes', 0.9375)],
    'c5': [('decision tree', 1)],
    'cart': [('dictionary', 1), ('classification and regression tree', 0.9375)],
    'classification and regression tree': [('decision tree', 1), ('naive bayes', 0.9375)],
    'cash': [('dictionary', 1), ('combined algorithm selection and hyperparameter optimization', 0.9375), ('graphics processing unit', 0.9375)],
    'combined algorithm selection and hyperparameter optimization': [('applications', 1)],
    'chaid': [('dictionary', 1)],
    'chi-squared automatic interaction detection': [('decision tree', 1)],
    'cnn': [('dictionary', 1)],
    'cntk': [('frameworks', 1)],
    'curl': [('dictionary', 1)],
    'cv': [('dictionary', 1)],
    'cross-validation': [('applications', 1)],
    'cv estimator': [('cross-validation', 1)],
    'cv generator': [('cross-validation', 1)],
    'cv splitter': [('cross-validation', 1)],
    'caffe': [('frameworks', 1), ('tensorflow', 0.9375), ('keras', 0.9375)],
    'categorical naive bayes': [('naive bayes', 1)],
    'chad e. brown': [('people', 1)],
    'josef urban': [('people', 1)],
    'chistopher d. manning': [('people', 1)],
    'global vectors for word representation': [('deep learning', 1), ('glove', 0.9375)],
    'classification': [('decision tree', 1)],
    'classifiers': [('probability calibration', 1)],
    'probability calibration': [('applications', 1)],
    'clustering': [('algorithms', 1)],
    'unsupervised learning': [('mltypes', 1)],
    'column transformer with heterogeneous data sources': [('applications', 1)],
    'comparison of calibration of classifiers': [('probability calibration', 1)],
    'complement naive bayes': [('naive bayes', 1)],
    'computer vision': [('applications', 1)],
    'conditional decision tree': [('decision tree', 1)],
    'image-based': [('algorithms', 1)],
    'reinforcement learning': [('mltypes', 1)],
    'deep neural networks': [('deep learning', 1)],
    'covariance estimation': [('applications', 1), ('sparse inverse', 0.9375), ('monte carlo simulation', 0.9375)],
    'cross decomposition methods': [('applications', 1)],
    'curves': [('probability calibration', 1)],
    'dbm': [('dictionary', 1)],
    'deep boltzmann machine': [('deep neural networks', 1)],
    'dbn': [('dictionary', 1), ('deep belief networks', 0.9375), ('gaussian naive bayes', 0.9375)],
    'deep belief networks': [('deep neural networks', 1), ('naive bayes', 0.9375), ('gaussian naive bayes', 0.9375)],
    'dbscan': [('dictionary', 1), ('optics', 0.9375), ('ordering points to identify the clustering structure', 0.9375)],
    'density-based spatial clustering of applications with noise': [('clustering', 1)],
    'data base': [('dependencies', 1)],
    'davoud moulavi': [('people', 1)],
    'decision stump': [('decision tree', 1)],
    'regression': [('applications', 1)],
    'deep learning': [('algorithms', 1)],
    'dimensionality reduction': [('algorithms', 1)],
    'dzmitry bahdanau': [('people', 1)],
    'fethi bougares': [('people', 1)],
    'holger schwenk': [('people', 1)],
    'kyunghyun cho': [('people', 1)],
    'yoshua bengio': [('people', 1)],
    'sequence-to-sequence models': [('applications', 1)],
    'eclat': [('association rule learning', 1)],
    'elastic net': [('regularization', 1), ('ridge regression', 0.9375), ('lars', 0.9375), ('plsr', 0.9375), ('partial least squares regression', 0.9375), ('gradient boosting machine', 0.9375)],
    'regularization': [('algorithms', 1)],
    'empirical': [('covariance estimation', 1)],
    'engenvalues': [('applications', 1)],
    'enrico fermi': [('people', 1)],
    'monte carlo simulation': [('algorithms', 1)],
    'expectation maximisation': [('clustering', 1), ('hmm', 0.9375)],
    'fda': [('dictionary', 1)],
    'flexible discriminant analysis': [('dimensionality reduction', 1)],
    'fabio moioli': [('people', 1)],
    'face recognition': [('image processing', 1)],
    'image processing': [('applications', 1)],
    'facebook': [('institutions', 1)],
    'institutions': [('involved', 1)],
    'factor analysis': [('probabilistic models', 1), ('probabilistic pca', 0.9375)],
    'probabilistic models': [('applications', 1)],
    'feature extraction': [('applications', 1)],
    'principal component analysis': [('dimensionality reduction', 1), ('quadratic discriminant analysis', 0.9375)],
    'fei-fei li': [('people', 1)],
    'forests of randomized trees': [('ensemble', 1)],
    'frank hutter': [('people', 1)],
    'gbdt': [('dictionary', 1)],
    'gradiente bosted decision trees': [('ensemble', 1)],
    'gbm': [('dictionary', 1), ('gradient boosting machine', 0.9375)],
    'gradient boosting machine': [('ensemble', 1), ('lars', 0.9375), ('plsr', 0.9375), ('nisq', 0.9375)],
    'gbrt': [('dictionary', 1)],
    'gpr': [('dictionary', 1)],
    'gaussian process regression': [('regression', 1), ('radial basis function network', 0.9375), ('gpr', 0.9375)],
    'gpu': [('dictionary', 1)],
    'graphics processing unit': [('hardware', 1)],
    'gael varoquaux': [('people', 1)],
    'gamma functions': [('functions', 1)],
    'gaussian distribution': [('applications', 1)],
    'gaussian naive bayes': [('naive bayes', 0.9375), ('support vector machines', 0.9375), ('knn', 0.9375)],
    'gene data analisys': [('applications', 1)],
    'genetic algorithms': [('applications', 1)],
    'geoffrey hinton': [('people', 1)],
    'laurens van der maaten': [('people', 1)],
    't-distributed stochastic neighbor embedding': [('algorithms', 1)],
    'glove': [('dictionary', 1)],
    'google': [('institutions', 1)],
    'gradient tree boosting': [('ensemble', 1)],
    'hardware': [('dependencies', 1)],
    'gregory piatetsky-shapiro': [('people', 1)],
    'guillaume lemaitre': [('people', 1)],
    'hdbscan': [('dictionary', 1)],
    'hierarchical density-based spatial clustering of applications with noise': [('clustering', 1)],
    'hmm': [('dictionary', 1), ('markov model', 0.9375)],
    'hiden markov model': [('markov process models', 1)],
    'hankel functions': [('functions', 1)],
    'hanmin qin': [('people', 1)],
    'hassan kane': [('people', 1)],
    'hierarchical clustering': [('clustering', 1), ('optics', 0.9375)],
    'hierarchical clustering dendrogram': [('cluster applications', 1)],
    'hierarchical markov models': [('markov process models', 1)],
    'histogram based gradient boosting': [('ensemble', 1)],
    'hopfield network': [('artificial neural network', 1)],
    'id3': [('dictionary', 1)],
    'iterative dichotomiser 3': [('decision tree', 1)],
    'ilya sutskever': [('people', 1)],
    'oriol vinyals': [('people', 1)],
    'quoc v. le': [('people', 1)],
    'image classification': [('applications', 1)],
    'inductive clustering': [('cluster applications', 1)],
    'instance-based': [('algorithms', 1)],
    'integration': [('applications', 1)],
    'interpolation and splines': [('applications', 1)],
    'jax': [('frameworks', 1)],
    'jan hendrik metzen': [('people', 1)],
    'jeffrey pennington': [('people', 1)],
    'joel nothman': [('people', 1)],
    'joerg sander': [('people', 1)],
    'john von neumann': [('people', 1)],
    'joris van den bossche': [('people', 1)],
    'jost tobias springenberg': [('people', 1)],
    'jéremie du boisberranger': [('people', 1)],
    'jürgen schmidhuber': [('people', 1)],
    'kai-fu lee': [('people', 1)],
    'katharina eggensperger': [('people', 1)],
    'keras': [('frameworks', 1), ('tensorflow', 0.9375), ('matplotlib', 0.9375)],
    'kirk borne': [('people', 1)],
    'lars': [('dictionary', 1), ('plsr', 0.9375), ('partial least squares regression', 0.9375)],
    'least-angle regression': [('regression', 1)],
    'lda': [('dictionary', 1), ('linear discriminant analysis', 0.9375)],
    'latent dirichlet allocation': [('natural language processing', 1), ('lda', 0.9375)],
    'linear discriminant analysis': [('dimensionality reduction', 1)],
    'lms': [('dictionary', 1)],
    'loess': [('dictionary', 1)],
    'locally estimated scatterplot smoothing': [('regression', 1), ('loess', 0.9375), ('support vector machine', 0.9375)],
    'lsa': [('dictionary', 1)],
    'lstm': [('dictionary', 1)],
    'long short-term memory networks': [('deep neural networks', 1)],
    'lvq': [('dictionary', 1)],
    'learning vector quantization': [('algorithms', 1), ('lvq', 0.9375)],
    'lwl': [('dictionary', 1)],
    'locally weighted learning': [('instance-based', 1)],
    'language translator': [('applications', 1)],
    'least absolute shinkage and selection operator': [('regularization', 1)],
    'ledoitwolf estimator': [('covariance estimation', 1)],
    'lex fridman': [('people', 1)],
    'libsvm gui': [('applications', 1)],
    'lightgbm': [('frameworks', 1), ('xgboost', 0.9375)],
    'microsoft': [('institutions', 1)],
    'linear': [('regression', 1)],
    'linear algebra': [('applications', 1)],
    'linear models': [('algorithms', 1)],
    'linear regression': [('linear models', 1), ('ordinary least squares', 0.9375)],
    'linux': [('operating system', 0.9375), ('macos', 0.9375)],
    'logistic regression': [('regression', 1)],
    'loic estève': [('people', 1)],
    'm5': [('decision tree', 1)],
    'mars': [('dictionary', 1), ('multivariate adaptive regression splines', 0.9375)],
    'multivariate adaptive regression splines': [('regression', 1)],
    'mcd': [('dictionary', 1)],
    'minimum covariante determinant': [('covariance estimation', 1)],
    'mda': [('dictionary', 1)],
    'mixture discriminant analysis': [('dimensionality reduction', 1)],
    'mds': [('dictionary', 1), ('multidimensional scaling', 0.9375)],
    'multidimensional scaling': [('dimensionality reduction', 1)],
    'mlp': [('dictionary', 1)],
    'macos': [('operating system', 0.9375), ('pandas', 0.9375), ('windows', 0.9375)],
    'mahalanobis distances': [('covariance estimation', 1)],
    'manuel blum': [('people', 1)],
    'markov-chain forecasting models': [('markov process models', 1)],
    'markov chain': [('markov process models', 1)],
    'markov decision process': [('markov process models', 1), ('partially observable markov decision process', 0.9375), ('pomdp', 0.9375)],
    'markov model': [('dictionary', 1)],
    'markov network': [('dictionary', 1)],
    'markov random field': [('markov process models', 1)],
    'matplotlib': [('frameworks', 1), ('numpy', 0.9375), ('scipy', 0.9375), ('python', 0.9375), ('pandas', 0.9375), ('tensorflow', 0.9375)],
    'matthias feurer': [('people', 1)],
    'max match': [('algorithms', 1)],
    'semi-supervised learning': [('mltypes', 1)],
    'mean-shift': [('clustering', 1)],
    'michael laskin': [('people', 1)],
    'minibatchkmeans': [('cluster applications', 1)],
    'minibatchmeans': [('clustering', 1)],
    'multilabel classification': [('applications', 1)],
    'multinomial naive bayes': [('naive bayes', 0.9375), ('support vector machines', 0.9375)],
    'muti-task learning': [('algorithms', 1)],
    'mxnet': [('frameworks', 1), ('tensorflow', 0.9375)],
    'nisq': [('dictionary', 1)],
    'noisy intermediate-scale quantum processors': [('hardware', 1)],
    'nlg': [('dictionary', 1)],
    'natural language generation': [('natural language processing', 1), ('nlg', 0.9375)],
    'nlp': [('dictionary', 1)],
    'nlu': [('dictionary', 1)],
    'natural language understanding': [('natural language processing', 1), ('nlu', 0.9375)],
    'nubia': [('dictionary', 1)],
    'natural language understand': [('natural language processing', 1)],
    'nelle varoquaux': [('people', 1)],
    'network-x': [('frameworks', 1)],
    'newton-cg': [('optimization', 1)],
    'nick bostrom': [('people', 1)],
    'nicolas hug': [('people', 1)],
    'noam chomsky': [('people', 1)],
    'noise foiltering': [('applications', 1)],
    'non-linear technique': [('applications', 1)],
    'numpy': [('frameworks', 1), ('scipy', 0.9375), ('pandas', 0.9375), ('scikit-learn', 0.9375)],
    'python': [('frameworks', 1)],
    'oas': [('covariance estimation', 1), ('pomdp', 0.9375)],
    'oas estimator': [('applications', 1)],
    'ode': [('dictionary', 1)],
    'ordinary differential equations': [('applications', 1), ('radial basis function network', 0.9375)],
    'olsr': [('dictionary', 1)],
    'ordinary least squares': [('linear models', 1)],
    'optics': [('dictionary', 1), ('ordering points to identify the clustering structure', 0.9375)],
    'ordering points to identify the clustering structure': [('clustering', 1)],
    'olivier grisel': [('people', 1)],
    'orthogonal polynomials': [('functions', 1)],
    'others': [('frameworks', 1)],
    'outlier detection': [('applications', 1)],
    'p. j. rousseeuw': [('people', 1)],
    'pca': [('dictionary', 1), ('principal component analysis', 0.9375), ('probabilistic pca', 0.9375)],
    'pcr': [('dictionary', 1), ('principal component regression', 0.9375), ('plsr', 0.9375)],
    'principal component regression': [('dimensionality reduction', 1)],
    'plsr': [('dictionary', 1), ('support vector machines', 0.9375)],
    'partial least squares regression': [('dimensionality reduction', 1), ('plsr', 0.9375), ('support vector machines', 0.9375)],
    'pomdp': [('dictionary', 1)],
    'partially observable markov decision process': [('markov process models', 1), ('pomdp', 0.9375)],
    'paddle paddle': [('frameworks', 1)],
    'pandas': [('frameworks', 1), ('scipy', 0.9375), ('python', 0.9375), ('tensorflow', 0.9375)],
    'parallel programming': [('applications', 1), ('support vector machines', 0.9375)],
    'partial dependence plots': [('applications', 1)],
    'perceptron': [('linear models', 1)],
    'personal assistant': [('applications', 1)],
    'pieter abbeel': [('people', 1)],
    'probabilistic pca': [('probabilistic models', 1)],
    'project pursuit': [('dimensionality reduction', 1)],
    'pycaret': [('frameworks', 1)],
    'xgboost': [('frameworks', 1)],
    'spacy': [('frameworks', 1)],
    'pytorch': [('frameworks', 1)],
    'qda': [('dictionary', 1), ('quadratic discriminant analysis', 0.9375)],
    'quadratic discriminant analysis': [('dimensionality reduction', 1), ('support vector machine', 0.9375)],
    'rnn': [('dictionary', 1)],
    'radial basis function network': [('artificial neural network', 1)],
    'random forest': [('ensemble', 1)],
    'reza zadeh': [('people', 1)],
    'ricardo j. g. b. campello': [('people', 1)],
    'richard socher': [('people', 1)],
    'ridge regression': [('regression', 1)],
    'robust': [('covariance estimation', 1)],
    'roman yurchak': [('people', 1)],
    'ronald van loon': [('people', 1)],
    'sofm': [('dictionary', 1)],
    'self-organizing feature map': [('artificial neural network', 1)],
    'som': [('dictionary', 1)],
    'self-organizing map': [('artificial neural network', 1), ('instance-based', 1)],
    'son': [('dictionary', 1)],
    'svm': [('dictionary', 1)],
    'support vector machines': [('instance-based', 1)],
    'sammon mapping': [('dimensionality reduction', 1)],
    'the scipy community': [('institutions', 1)],
    'shrinkage': [('covariance estimation', 1)],
    'signal processing': [('applications', 1)],
    'simplex': [('optimization', 1)],
    'software': [('dependencies', 1)],
    'sparce matrices': [('applications', 1)],
    'sparse inverse': [('covariance estimation', 1)],
    'spectral bi-clustering': [('clustering', 1)],
    'spectral co-clustering': [('clustering', 1)],
    'speech': [('applications', 1)],
    'stacked auto-encoders': [('deep neural networks', 1)],
    'stacked generalization': [('ensemble', 1)],
    'stacking': [('dictionary', 1)],
    'stanislaw ulam': [('people', 1)],
    'stepwise regression': [('regression', 1)],
    'stochastic gradient descent': [('artificial neural network', 1)],
    'stock market prediction': [('applications', 1)],
    'structured': [('data base', 1)],
    'structured ward hierarchical clustering on an image of coins': [('cluster applications', 1)],
    'support vector machine': [('algorithms', 1), ('svm', 0.9375)],
    'sympy': [('frameworks', 1)],
    't-ngl': [('frameworks', 1)],
    'td': [('dictionary', 1)],
    'tmm': [('dictionary', 1)],
    'tolerant markov model': [('markov process models', 1)],
    'tensorflow': [('frameworks', 1)],
    'text classification': [('applications', 1)],
    'text summarization': [('applications', 1)],
    'theano': [('frameworks', 1)],
    'thomas j. fan': [('people', 1)],
    'tom dupré la tour': [('people', 1)],
    'toy datasets': [('cluster applications', 1)],
    'unstructured': [('data base', 1)],
    'visualization': [('applications', 1)],
    'vlad niculae': [('people', 1)],
    'vladmir vapinik': [('people', 1)],
    'voting classifier': [('ensemble', 1)],
    'voting regressor': [('ensemble', 1)],
    'widrow-hoff': [('algorithms', 1)],
    'windows': [('operating system', 1)],
    'word2vec': [('deep learning', 1)],
    'yann lecun': [('people', 1)],
    'yaroslav halchenko': [('people', 1)],
    'zsolt zombori': [('people', 1)],
    'k-means': [('clustering', 1)],
    'k-medians': [('clustering', 1)],
    'k-nearest neighbor': [('instance-based', 1)],
    'k-dimensional trees': [('applications', 1)],
    'knn': [('dictionary', 1)],
    't-sne': [('dictionary', 1)],
    '2d plotting capabilities': [('applications', 1)],
    '3-classe classification': [('probability calibration', 1)],
    'hierarchical clustering: structured vs unstructured ward': [('cluster applications', 1)],
    'rusian leont'evich stratonovich': [('people', 1)],
    'describeddate': [('datetime', 1)],
    'canbesolvedby': [],
    'cansolve': [],
    'isresourcefor': [],
    'worksfor': [],
    'isauthor': [],
    'hasauthor': [],
    'hasacronym': [],
    'hasbyname': [],
    'isacronym': [],
    'hasalgorithm': [],
    'isalgorithmof': [],
    'hasapplicationfrom': [],
    'isapplicationof': [],
    'wasdescribed': [],
    'isbyname': [],
    'hascomplementaryresources': [],
    'iscomplementaryresources': [],
    'hascontinuosvalues': [],
    'iscontinuousvariable': [],
    'hasdiscretvalues': [],
    'iscategoricalvariable': [],
    'hasfunction': [],
    'hasmodule': [],
    'hasmethod': [],
    'ismethod': [],
    'ismodule': [],
    'haspart': [],
    'ispart': [],
    'hassimilarmethodsfrom': [],
    'hassimilarmethodsin': [],
    'issimilarmethodsfrom': [],
    'hassource': [],
    'implementedby': [],
    'isalgoritm': [],
    'istechnique': [],
    'iscoauthor': [],
    'iscopyright': [],
    'isdeprecated': [],
    'isdesignedtoworkfor': [],
    'isfunction': [],
    'ismemberof': [],
    'istypeof': [],
    'isopensourcefrom': [],
    'ispackagefrom': [],
    'isperson': [],
    'isproblemof': [],
    'issubpackagefrom': [],
    'issubtypeof': [],
    'issucessor': [],
    'seealso': [],
    'usesolver': [],
    'mlo:github': [],
    'mlo:linkedln': [],
    'mlo:twitter': [],
    'mlo:website': [],
    'thing': [],
}
